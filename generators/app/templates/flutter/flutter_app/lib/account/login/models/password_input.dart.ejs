import 'package:formz/formz.dart';

enum PasswordValidationError { invalid }

extension PasswordValidationErrorX on PasswordValidationError {
  String get invalidMessage =>
      'Reglas : 1 mayuscula, 1 numero y ${PasswordInput.numberMin} caracteres.';
}

class PasswordInput extends FormzInput<String, PasswordValidationError> {
  const PasswordInput.pure() : super.pure('');
  const PasswordInput.dirty([super.value = '']) : super.dirty();

  static const int numberMin = 4;
  /*
  static final _passwordRegex =
      RegExp(r'^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$');

  @override
  PasswordValidationError? validator(String value) {
    return _passwordRegex.hasMatch(value)
        ? null
        : PasswordValidationError.invalid;
  }*/

  @override
  PasswordValidationError? validator(String value) {
    return value.length >= numberMin ? null : PasswordValidationError.invalid;
  }
}
