// ignore_for_file: public_member_api_docs, sort_constructors_first
import 'package:equatable/equatable.dart';
import 'package:intl/intl.dart';
import 'package:<%= baseName %>/shared/utils/utils.dart';

class User extends Equatable implements JsonSerializable {
  final int? id;
  final String login;
  final String? firstName;
  final String? lastName;
  final String? email;
  final String? imageUrl;
  final bool activated;
  final String? langKey;
  final String? createdBy;
  final String? createdDate;
  final String? lastModifiedBy;
  final String? lastModifiedDate;
  final List<String> authorities;

  const User({
    this.id = 0,
    this.login = '',
    this.firstName = '',
    this.lastName = '',
    this.email = '',
    this.imageUrl = '',
    this.activated = true,
    this.langKey = '',
    this.createdBy = '',
    this.createdDate,
    this.lastModifiedBy = '',
    this.lastModifiedDate,
    required this.authorities,
  });

  static const empty = User(
    id: 0,
    login: '',
    firstName: '',
    lastName: '',
    email: '',
    imageUrl: '',
    activated: true,
    langKey: '',
    createdBy: '',
    createdDate: null,
    lastModifiedBy: '',
    lastModifiedDate: null,
    authorities: ['ROLE_USER'],
  );

  @override
  String toString() {
    return '''User{
      login: $login,
      firstName: $firstName,
      lastName: $lastName,
      email: $email,
      activated: $activated,
      langKey: $langKey,
      createdBy: $createdBy,
      createdDate: $createdDate,
      lastModifiedBy: $lastModifiedBy,
      lastModifiedDate: $lastModifiedDate,
      authorities: $authorities
      }''';
  }

  @override
  List<Object?> get props => [
        id,
        login,
        email,
        imageUrl,
        activated,
        firstName,
        lastName,
        langKey,
        createdBy,
        createdDate,
        lastModifiedBy,
        lastModifiedDate,
        authorities,
      ];

  User copyWith({
    int? id,
    String? login,
    String? firstName,
    String? lastName,
    String? email,
    String? imageUrl,
    bool? activated,
    String? langKey,
    String? createdBy,
    String? createdDate,
    String? lastModifiedBy,
    String? lastModifiedDate,
    List<String>? authorities,
  }) {
    return User(
      id: id ?? this.id,
      login: login ?? this.login,
      firstName: firstName ?? this.firstName,
      lastName: lastName ?? this.lastName,
      email: email ?? this.email,
      imageUrl: imageUrl ?? this.imageUrl,
      activated: activated ?? this.activated,
      langKey: langKey ?? this.langKey,
      createdBy: createdBy ?? this.createdBy,
      createdDate: createdDate ?? this.createdDate,
      lastModifiedBy: lastModifiedBy ?? this.lastModifiedBy,
      lastModifiedDate: lastModifiedDate ?? this.lastModifiedDate,
      authorities: authorities ?? this.authorities,
    );
  }

  @override
  Map<String, dynamic> toJson() => {
        "id": id,
        "login": login,
        "firstName": firstName,
        "lastName": lastName,
        "email": email,
        "imageUrl": imageUrl,
        "activated": activated,
        "langKey": langKey,
        "createdBy": createdBy,
        "createdDate": createdDate,
        "lastModifiedBy": lastModifiedBy,
        "lastModifiedDate": lastModifiedDate,
        "authorities": List<String>.from(authorities.map((x) => x)),
      };

  factory User.fromJson(Map<String, dynamic> json) {
    return User(
      id: json['id'] != null ? json['id'] as int : 0,
      login: json['login'] != null ? json['login'] as String : '',
      firstName: json['firstName'] != null ? json['firstName'] as String : '',
      lastName: json['lastName'] != null ? json['lastName'] as String : '',
      email: json['email'] != null ? json['email'] as String : '',
      imageUrl: json['imageUrl'] != null ? json['imageUrl'] as String : '',
      activated: json['activated'] != null ? json['activated'] as bool : true,
      langKey: json['langKey'] != null ? json['langKey'] as String : 'es',
      createdBy:
          json['createdBy'] != null ? json['createdBy'] as String : 'system',
      createdDate: json['createdDate'] != null && json['createdDate'] != ''
          ? DateFormat('yyyy-MM-dd hh:mm:ss')
              .format(DateTime.parse(json['createdDate']))
              .toString()
          : '',
      lastModifiedBy: json['lastModifiedBy'] != null
          ? json['lastModifiedBy'] as String
          : 'system',
      lastModifiedDate:
          json['lastModifiedDate'] != null && json['lastModifiedDate'] != ''
              ? DateFormat('yyyy-MM-dd hh:mm:ss')
                  .format(DateTime.parse(json['lastModifiedDate']))
                  .toString()
              : '',
      authorities: json['authorities'] != null
          ? List<String>.from(json['authorities'].map((x) => x))
          : [],
    );
  }
}
