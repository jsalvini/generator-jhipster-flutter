import 'package:equatable/equatable.dart';
import 'package:<%= baseName %>/shared/utils/utils.dart';

class ErrorResponse extends Equatable implements JsonSerializable {
  final String type;
  final String title;
  final int status;
  final String detail;
  final String instance;
  final String message;
  final String path;

  const ErrorResponse({
    required this.type,
    required this.title,
    required this.status,
    required this.detail,
    required this.instance,
    required this.message,
    required this.path,
  });

  ErrorResponse copyWith({
    String? type,
    String? title,
    int? status,
    String? detail,
    String? instance,
    String? message,
    String? path,
  }) =>
      ErrorResponse(
        type: type ?? this.type,
        title: title ?? this.title,
        status: status ?? this.status,
        detail: detail ?? this.detail,
        instance: instance ?? this.instance,
        message: message ?? this.message,
        path: path ?? this.path,
      );

  factory ErrorResponse.fromJson(Map<String, dynamic> json) => ErrorResponse(
        type: json["type"],
        title: json["title"],
        status: json["status"],
        detail: json["detail"],
        instance: json["instance"],
        message: json["message"],
        path: json["path"],
      );

  @override
  Map<String, dynamic> toJson() => {
        "type": type,
        "title": title,
        "status": status,
        "detail": detail,
        "instance": instance,
        "message": message,
        "path": path,
      };

  @override
  List<Object?> get props => [
        type,
        title,
        status,
        detail,
        instance,
        message,
        path,
      ];
}


/*
@jsonSerializable
class ErrorResponse extends Equatable {
  @JsonProperty(name: 'type')
  final String? type;

  @JsonProperty(name: 'title')
  final String? title;

  @JsonProperty(name: 'status')
  final int? status;

  @JsonProperty(name: 'instance')
  final String? instance;

  @JsonProperty(name: 'detail')
  final String? detail;

  @JsonProperty(name: 'message')
  final String? message;

  @JsonProperty(name: 'path')
  final String? path;

  const ErrorResponse(
    this.type,
    this.title,
    this.status,
    this.detail,
    this.instance,
    this.message,
    this.path,
  );

  static const empty = ErrorResponse('', '', 0, '', '', '', '');

  @override
  String toString() {
    return '''ErrorResponse{
      type: $type,
      title: $title,
      status: $status,
      detail: $detail,
      instance: $instance,
      message: $message,
      path: $path,
      }''';
  }

  @override
  List<Object?> get props => [
        type,
        title,
        status,
        detail,
        instance,
        message,
        path,
      ];
}*/