import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:go_router/go_router.dart';

import 'package:<%= baseName %>/account/authentication/authentication.dart';
import 'package:<%= baseName %>/account/login/login_routes.dart';
import 'package:<%= baseName %>/account/settings/settings_routes.dart';
import 'package:<%= baseName %>/entities/employee/employee_routes.dart';
import 'package:<%= baseName %>/entities/job/views/job_list_screen.dart';
import 'package:<%= baseName %>/home/home_routes.dart';
import 'package:<%= baseName %>/shared/repository/authentication_repository.dart';
import 'package:<%= baseName %>/splash/splash_routes.dart';

abstract class AppRouter {
  static GoRouter router = GoRouter(
    initialLocation: SplashRoutes.path,
    routes: [
      ...SplashRoutes.splashRoutes,
      ...HomeRoutes.homeRoutes,
      ...LoginRoutes.loginRoutes,
      ...SettingsRoutes.settingsRoutes,
    ],
    errorPageBuilder: (context, state) => const MaterialPage(
      child: Scaffold(
        body: Center(
          child: Text('Ruta no encontrada!'),
        ),
      ),
    ),
    redirect: (context, state) async {
      final authenticationBloc =
          context.read<AuthenticationBloc>().state.status;

      final ir_a = state.matchedLocation;

      if (authenticationBloc == AuthenticationStatus.authenticated &&
          ir_a.compareTo(LoginRoutes.path) == 0) {
        return HomeRoutes.path;
      } else if (authenticationBloc == AuthenticationStatus.unauthenticated) {
        return LoginRoutes.path;
      }
      return null;
    },
  );
}
